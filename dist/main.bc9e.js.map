{"version":3,"sources":["webpack:///./src/comp/firebase.js","webpack:///./src/comp/SearchFriend.js","webpack:///./src/comp/Common.js","webpack:///./src/comp/User.js","webpack:///./src/comp/Article.js","webpack:///./src/comp/Login.js","webpack:///./src/comp/PostArea.js","webpack:///./src/index.js"],"names":["firebase_initFirebase","index_cjs_default","a","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase_filterUserByEmail","email","cb","database","ref","orderByChild","equalTo","on","firebase_updateUserData","key","data","set","setUserData","field","child","push","firebase_setField","firebase_getField","action","console","log","listenUserChange","listenArticleChange","firebase_fetchData","once","comp_SearchFriend","SearchFriend","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","value","userKey","handleChange","bind","clearinput","react_default","Component","setState","e","_this2","currentTarget","snapshot","isUserkey","forEach","val","_this3","createElement","type","placeholder","onChange","onClick","send","disabled","genRandomKey","n","arguments","length","undefined","letter","Array","from","fill","map","w","Math","floor","random","join","request","comp_User","User","User_classCallCheck","User_possibleConstructorReturn","inviteeInfo","friendInfo","sent","beComfirm","accept","sendInvitation","cancelReq","friendId","newRequest","newInvitation","assign","user","invitation","newUserData","id","allUserData","Link","to","className","lists","friends","getList","rawData","keys","canBeFriend","canBeCancel","User_ListItem","cancel","itemData","invitationList","friendList","name","_ref","status","beFriendBtn","cancelBtn","Article","Articles","Article_classCallCheck","Article_possibleConstructorReturn","keyword","posts","postList","articles","article","values","filter","post","rex","RegExp","title","match","tag","author","content","comp_Login","Login","Login_classCallCheck","Login_possibleConstructorReturn","handleName","handleEmail","login","registerUser","update","currentId","userData","firends","notes","isRegistered","comp_PostArea","PostArea","PostArea_classCallCheck","PostArea_possibleConstructorReturn","handleChangeTitle","handleChangeContent","postToFirebase","handleChangeTag","firebase_updatePost","currentUser","postBtn","date","Date","getTime","authorId","createTime","row","cols","src_App","App","src_classCallCheck","src_possibleConstructorReturn","fetchFromFirebase","registerEvent","logout","updateState","then","_this4","_this5","logoutBtn","BrowserRouter","Switch","Route","path","exact","render","_extends","react_dom_default","document","getElementById"],"mappings":"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","file":"main.bc9e.js","sourcesContent":["import firebase from \"firebase\";\n\nexport const initFirebase = () => {\n  var config = {\n    apiKey: \"AIzaSyAZWmB1nTjQVnSIaFylL3TICAnY_l7DRXM\",\n    authDomain: \"be-my-friend.firebaseapp.com\",\n    databaseURL: \"https://be-my-friend.firebaseio.com\",\n    projectId: \"be-my-friend\",\n    storageBucket: \"be-my-friend.appspot.com\",\n    messagingSenderId: \"981772721378\"\n  };\n  firebase.initializeApp(config);\n};\n\nexport const filterUserByEmail = (email, cb) => {\n  return firebase\n    .database()\n    .ref(\"users\")\n    .orderByChild(\"email\")\n    .equalTo(email)\n    .on(\"value\", cb);\n};\n\nexport const getUserByKey = (key, cb) => {\n  return firebase\n    .database()\n    .ref(\"users/\" + key)\n    .on(\"value\", cb);\n};\n\nexport const filterUserById = (id, cb) => {\n  return firebase\n    .database()\n    .ref(\"users\")\n    .orderByChild(\"email\")\n    .equalTo(id)\n    .on(\"value\", cb);\n};\n\nexport const setField = field => data => {\n  let key = firebase\n    .database()\n    .ref()\n    .child(field)\n    .push().key;\n\n  firebase\n    .database()\n    .ref(field + \"/\" + key)\n    .set(data);\n\n  return key;\n};\n\nexport const updateUserData = (key, data) => {\n  firebase\n    .database()\n    .ref(\"users/\" + key)\n    .set(data);\n};\n\nexport const updatePost = article => {\n  firebase\n    .database()\n    .ref(\"article/\")\n    .push(article);\n};\n\nexport const setUserData = setField(\"users\");\n\nexport const getField = field => action => {\n  console.log(\"in getFiedl\");\n  return firebase\n    .database()\n    .ref(field)\n    .on(\"value\", action);\n};\n\nexport const getUserField = (field, action) => {\n  return firebase\n    .database()\n    .ref(field)\n    .on(\"value\", action);\n};\n\nexport const listenSpecificUserChange = (field, action) => {\n  return firebase\n    .database()\n    .ref(\"users/\" + field)\n    .on(\"value\", action);\n};\n\nexport const listenEmailChange = getField(\"email\");\nexport const listenUserChange = getField(\"users\");\nexport const listenArticleChange = getField(\"article\");\n\nexport const fetchData = field => {\n  return firebase\n    .database()\n    .ref(field)\n    .once(\"value\");\n};\n","import React from \"react\";\nimport {filterUserByEmail} from \"./firebase.js\";\n\nexport default class SearchFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      userKey: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.clearinput = this.clearinput.bind(this);\n  }\n  clearinput() {\n    this.setState({value: \"\"});\n  }\n  handleChange(e) {\n    this.setState({value: e.currentTarget.value});\n\n    filterUserByEmail(e.currentTarget.value, snapshot => {\n      let isUserkey = false;\n      snapshot.forEach(email => {\n        if (email.key) {\n          console.log(\"xxxxxxxxxxxxxxx\", snapshot.val());\n          this.setState({\n            userKey: email.key\n          });\n          isUserkey = true;\n          return;\n        }\n      });\n      if (!isUserkey) {\n        this.setState({userKey: null});\n      }\n    });\n\n    console.log(this.state);\n  }\n  render() {\n    return (\n      <div>\n        <br />\n        <h2>Search friend</h2>\n        <input\n          type=\"text\"\n          placeholder=\"user email\"\n          onChange={this.handleChange}\n          value={this.state.value}\n        />\n        <button\n          onClick={() => {\n            this.props.send(this.state.userKey);\n            this.clearinput();\n          }}\n          disabled={!this.state.userKey}>\n                    add\n        </button>\n      </div>\n    );\n  }\n}\n","export const hasValueInObj = (obj, value) => {\n  for (let name in obj) {\n    if (obj[name] === value) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getKeyByValue = (obj, value) => {\n  for (let key in obj) {\n    if (obj[key] === value) {\n      return key;\n    }\n  }\n  return null;\n};\n\nexport const genRandomKey = (n = 3) => {\n  let letter = \"abcdefghijklmnopqrstuvxyzABCDEFGHIJKLMNOPQRSTUVXYZ\";\n  return Array.from({length: n})\n    .fill(0)\n    .map(w => letter[Math.floor(Math.random() * (letter.length - 1))])\n    .join(\"\");\n};\n","import React from \"react\";\nimport {updateUserData} from \"./firebase.js\";\nimport {genRandomKey} from \"./Common.js\";\nimport SearchFriend from \"./SearchFriend.js\";\nimport {Link} from \"react-router-dom\";\n\nconst request = {\n  sent: \"待接受\",\n  beComfirm: \"待邀請\"\n};\n\nexport default class User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inviteeInfo: null,\n      friendInfo: null\n    };\n\n    this.request = {\n      sent: \"待接受\",\n      beComfirm: \"待邀請\"\n    };\n\n    this.accept = this.accept.bind(this);\n    this.sendInvitation = this.sendInvitation.bind(this);\n    this.cancelReq = this.cancelReq.bind(this);\n  }\n  sendInvitation(friendId) {\n    let newRequest = {};\n    newRequest[friendId] = this.request.beComfirm;\n\n    let newInvitation = Object.assign(\n      {},\n      this.props.user.invitation,\n      newRequest,\n    );\n    let newUserData = Object.assign({}, this.props.user, {\n      invitation: newInvitation\n    });\n\n    // update invitation Data to firebase\n    updateUserData(this.props.id, newUserData);\n\n    updateUserData(\n      friendId + \"/invitation/\" + this.props.id,\n      this.request.sent,\n    );\n  }\n  // updateFriendData() {\n  //   let user = this.props.user;\n  //   if (!user || !user.friends) {\n  //     console.log(\"no user and no friends\");\n  //     this.setState({friendInfo: null});\n  //     return;\n  //   }\n\n  //   // fetch data and set to state\n  //   let friendList = Object.keys(user.friends);\n\n  //   let friendInfo = {};\n\n  //   friendList.map((key, index) => {\n  //     getUserByKey(key, snapshot => {\n  //       friendInfo[key] = snapshot.val();\n  //       if (index === friendList.length - 1) {\n  //         this.setState({friendInfo: friendInfo});\n  //       }\n  //     });\n  //   });\n  // }\n  // updateInvitationData() {\n  //   let user = this.props.user;\n  //   if (!user || !user.invitation) {\n  //     console.log(\"no user and no user invitation\");\n  //     this.setState({invitation: null});\n  //     return;\n  //   }\n\n  //   // fetch data and set to state\n  //   let invitationList = Object.keys(user.invitation);\n\n  //   let inviteeInfo = {};\n\n  //   invitationList.map((inviteeKey, index) => {\n  //     getUserByKey(inviteeKey, snapshot => {\n  //       inviteeInfo[inviteeKey] = snapshot.val();\n  //       if (index === invitationList.length - 1) {\n  //         this.setState({inviteeInfo: inviteeInfo});\n  //       }\n  //     });\n  //   });\n  // }\n  cancelReq(friendId) {\n    updateUserData(friendId + \"/invitation/\" + this.props.id, null);\n    updateUserData(this.props.id + \"/invitation/\" + friendId, null);\n  }\n  accept(friendId) {\n    updateUserData(friendId + \"/friends/\" + this.props.id, true);\n    updateUserData(this.props.id + \"/friends/\" + friendId, true);\n    updateUserData(friendId + \"/invitation/\" + this.props.id, null);\n    updateUserData(this.props.id + \"/invitation/\" + friendId, null);\n    // this.updateFriendData();\n  }\n  render() {\n    let user = this.props.user;\n    let allUserData = this.props.allUserData;\n\n    // error handling\n    if (!this.props.id || !user) {\n      return (\n        <div>\n          <Link to=\"/\">\n            <button className=\"btn\">login page</button>\n          </Link>\n        </div>\n      );\n    }\n\n    const lists = {\n      friends: \"friends\",\n      invitation: \"invitation\"\n    };\n\n    const getList = type => {\n      if (user && user[lists[type]] && allUserData) {\n        let rawData = user[lists[type]];\n        let objToArray = Object.keys(rawData);\n        return objToArray.map(key => {\n          let canBeFriend, canBeCancel;\n          if (type === lists.invitation) {\n            canBeFriend = rawData[key] !== this.request.sent;\n            canBeCancel = true;\n          }\n          return (\n            <ListItem\n              key={genRandomKey()}\n              cancel={this.cancelReq}\n              accept={this.accept}\n              itemData={Object.assign(\n                {},\n                allUserData[key],\n                {key: key},\n                {canBeFriend: canBeFriend},\n                {request: rawData[key]},\n                {canBeCancel: canBeCancel},\n              )}\n            />\n          );\n        }); // end of map\n      }\n    };\n\n    let invitationList = getList(lists.invitation);\n    let friendList = getList(lists.friends);\n\n    return (\n      <div className=\"user\">\n        <div>\n          <Link to=\"/article\">\n            <button className=\"btn\"> All articles </button>\n          </Link>\n\n          <Link to=\"/post\">\n            <button className=\"btn\"> New post </button>\n          </Link>\n        </div>\n        <div className=\"userText\">\n          <div className=\"name\"> {this.props.user.name}</div>\n          <div className=\"mail\"> mail: {this.props.user.email}</div>\n        </div>\n        <div>\n          <SearchFriend\n            send={this.sendInvitation}\n            email={this.props.email}\n          />\n        </div>\n        <div>\n          <h2>Invitation list</h2>\n          <div>{invitationList || \"No invitation\"}</div>\n        </div>\n        <div>\n          <h2>Friend list</h2>\n          <div>{friendList || \"No friends\"}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ListItem = ({itemData, accept, cancel}) => {\n  let status =\n        itemData.request === request.sent ? (\n          <span className=\"status\">request sent</span>\n        ) : (\n          <span className=\"status\"> comfirm request </span>\n        );\n  let beFriendBtn = (\n      <button onClick={() => accept(itemData.key)}>be friend</button>\n    ),\n    cancelBtn = (\n      <button className=\"btn\" onClick={() => cancel(itemData.key)}>\n                cancel\n      </button>\n    );\n  return (\n    <div className=\"list-item\" key={genRandomKey()}>\n      <div className=\"name\">\n        {\" \"}\n        {itemData.name} {itemData.canBeCancel && status}{\" \"}\n      </div>\n      <div className=\"mail\"> {itemData.email} </div>\n      {itemData.canBeFriend && beFriendBtn}\n      {itemData.canBeCancel && cancelBtn}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {genRandomKey} from \"./Common.js\";\nimport {updatePost} from \"./firebase.js\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Articles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    this.setState({keyword: e.currentTarget.value});\n  }\n  render() {\n    let posts,\n      postList,\n      articles = this.props.article;\n\n    if (articles) {\n      postList = Object.values(articles);\n\n      postList = postList.filter(post => {\n        const rex = new RegExp(this.state.keyword, \"gi\");\n        return (\n          post.title.match(rex) ||\n                    post.tag.match(rex) ||\n                    post.author.match(rex)\n        );\n      });\n    }\n\n    if (postList) {\n      posts = postList.map(post => {\n        return (\n          <div className=\"post\" key={genRandomKey()}>\n          <h5>{post.author} 說</h5>\n            <h6>{post.title}</h6>\n            <div>{post.content}</div>\n            <h4><span>{post.tag}</span></h4>\n          </div>\n        );\n      });\n    }\n    return (\n      <div>\n\n        <Link to=\"/user\"> <button className=\"btn\"> Profile </button> </Link>\n        <Link to=\"/post\"> <button className=\"btn\"> New Post </button> </Link>\n\n        <h2>Articles</h2>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"search some post\"\n            onChange={this.handleChange}\n            value={this.state.keyword}\n          />\n        </div>\n        {posts}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {filterUserByEmail, setUserData} from \"./firebase.js\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"3@g.com\",\n      name: \"\"\n      // redirectToReferrer: false,\n    };\n    this.handleName = this.handleName.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.login = this.login.bind(this);\n    this.registerUser = this.registerUser.bind(this);\n  }\n  handleName(e) {\n    this.setState({name: e.currentTarget.value});\n  }\n  handleEmail(e) {\n    this.setState({email: e.currentTarget.value});\n  }\n  login() {\n    console.log(\"start login\");\n    filterUserByEmail(this.state.email, snapshot => {\n      console.log(this.state.email);\n      snapshot.forEach(email => {\n        if (email.key) {\n          console.log(\"-------\", email.key);\n          this.props.update({\n            currentId: email.key,\n            userData: email.val()\n          });\n          return;\n        }\n      });\n      console.log(\"login failed\");\n    });\n  }\n  registerUser() {\n    // push user data to firebase\n    let key = setUserData({\n      email: this.state.email,\n      name: this.state.name,\n      firends: [],\n      invitation: []\n    });\n    // push data to email on firebase\n    // setNewEmailData(key, this.state.email);\n\n    //reset Input\n    this.setState({name: \"\", email: \"\"});\n    this.props.update({currentId: key});\n    // this.setState({ redirectToReferrer: true })\n  }\n  render() {\n    let notes = null,\n      isRegistered = false;\n    // checking if existing user\n    filterUserByEmail(this.state.email, function(snapshot) {\n      snapshot.forEach(email => {\n        if (email.key) {\n          isRegistered = true;\n          notes = <h4>Already registered</h4>;\n        }\n        return email.key;\n      });\n    });\n\n    // const {redirectToReferrer} = this.state;\n    // if(redirectToReferrer) {\n    //   return <Redirect to={}\n\n    // }\n    return (\n      <div className=\"login\">\n        <h2>Login / Register</h2>\n        <div>\n          <input\n            type=\"text\"\n            onChange={this.handleName}\n            value={this.state.name}\n            placeholder=\"name\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            onChange={this.handleEmail}\n            placeholder=\"email\"\n            value={this.state.email}\n          />\n        </div>\n\n        <div>\n        {notes}\n      </div>\n        <div>\n        <Link onClick={this.registerUser} to=\"/user\">\n          <button disabled={isRegistered}>Register</button>\n        </Link>\n        <Link\n          to=\"/user\"\n          onClick={() => this.props.login(this.state.email)}>\n          <button disabled={!isRegistered}>login</button>\n        </Link>\n      </div>\n      </div>\n    );\n  }\n}\n\n// disabled={isRegistered}>\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {updatePost} from \"./firebase.js\";\nimport {Link} from \"react-router-dom\";\n\nexport default class PostArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      title: \"\",\n      tag: \"\"\n    };\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\n    this.handleChangeContent = this.handleChangeContent.bind(this);\n    this.postToFirebase = this.postToFirebase.bind(this);\n    this.handleChangeTag = this.handleChangeTag.bind(this);\n  }\n  handleChangeTitle(e) {\n    this.setState({title: e.currentTarget.value});\n  }\n  handleChangeTag(e) {\n    this.setState({tag: e.currentTarget.value});\n  }\n  handleChangeContent(e) {\n    this.setState({content: e.currentTarget.value});\n  }\n  postToFirebase(article) {\n    updatePost(article);\n  }\n  render() {\n    console.log(\"------in post area------\");\n    console.log(this.props.id, this.props.user);\n    console.log(\"------------\");\n    if (!this.props.id || !this.props.user) return <div>not login yet</div>;\n    let currentUser = this.props.user && <h3> {this.props.user.name} </h3>;\n\n    //should remove true below\"\n    let postBtn = !this.props.user.name ? (\n      <p>login before post</p>\n    ) : (\n      <div>\n        <Link\n          onClick={() => {\n            let date = new Date().getTime();\n            let post = Object.assign(\n              {},\n              this.state,\n              {authorId: this.props.id},\n              {author: this.props.user.name},\n              {createTime: date},\n            );\n            this.postToFirebase(post);\n          }}\n          to=\"/article\">\n          <button> Post </button>\n        </Link>\n      </div>\n    );\n    return (\n      <div className=\"postarea\">\n        <div>\n          <Link to=\"/user\">\n            <button className=\"btn\"> Profile </button>\n          </Link>\n          <Link to=\"/article\">\n            <button className=\"btn\"> Article </button>\n          </Link>\n        </div>\n        {currentUser}\n        <div>\n          <input\n            placeholder=\"title\"\n            value={this.state.title}\n            onChange={this.handleChangeTitle}\n            type=\"text\"\n          />\n        </div>\n        <div>\n          <input\n            placeholder=\"tag\"\n            value={this.state.tag}\n            onChange={this.handleChangeTag}\n            type=\"text\"\n          />\n        </div>\n        <div>\n          <input\n            row=\"10\"\n            cols=\"10\"\n            value={this.state.content}\n            onChange={this.handleChangeContent}\n            type=\"textarea\"\n          />\n        </div>\n        <div className=\"postBtn\">{postBtn}</div>\n      </div>\n    );\n  }\n}\n","import \"./style/main.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport firebase from \"firebase\";\nimport {\n  IndexRoute,\n  BrowserRouter,\n  Router,\n  Route,\n  Link,\n  Switch\n} from \"react-router-dom\";\nimport SearchFriend from \"./comp/SearchFriend.js\";\nimport User from \"./comp/User.js\";\nimport Articles from \"./comp/Article.js\";\nimport {\n  initFirebase,\n  filterUserByEmail,\n  fetchData,\n  listenEmailChange,\n  listenArticleChange,\n  listenUserChange\n} from \"./comp/firebase.js\";\nimport Login from \"./comp/Login.js\";\nimport PostArea from \"./comp/PostArea.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      article: null,\n      allUserData: null,\n      currentUser: null,\n      userData: {email: \"\", name: \"\", friends: null, invitation: null},\n      currentId: null\n    };\n    initFirebase();\n    this.fetchFromFirebase = this.fetchFromFirebase.bind(this);\n    this.registerEvent = this.registerEvent.bind(this);\n    this.logout = this.logout.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.login = this.login.bind(this);\n    this.fetchFromFirebase();\n    this.registerEvent();\n  }\n\n  logout() {\n    this.setState({currentId: null});\n  }\n\n  updateState(data) {\n    this.setState(data);\n  }\n\n  login(email) {\n    console.log(\"start login\");\n    filterUserByEmail(email, snapshot => {\n      console.log(email);\n      snapshot.forEach(data => {\n        if (data.key) {\n          console.log(\"-------\", data.key);\n          this.setState({\n            currentId: data.key,\n            userData: data.val()\n          });\n          return;\n        }\n      });\n      console.log(\"login failed\");\n    });\n  }\n  fetchFromFirebase() {\n    fetchData(\"email\").then(email => this.setState({email: email.val()}));\n    fetchData(\"article\").then(article =>\n      this.setState({article: article.val()}),\n    );\n  }\n  registerEvent() {\n    listenUserChange(value => this.setState({allUserData: value.val()}));\n    listenArticleChange(value => this.setState({article: value.val()}));\n  }\n\n  render() {\n    console.log(\"---------------\");\n    console.log(this.state);\n    console.log(\"---------------\");\n    let logoutBtn = this.state.currentId ? (\n      <Link onClick={this.logout} to=\"/\">\n        <button>logout</button>\n      </Link>\n    ) : null;\n\n    return (\n      <div>\n        <BrowserRouter>\n          <div>\n            {logoutBtn}\n            <Switch>\n              <Route\n                path=\"/\"\n                exact\n                render={props => {\n                  return (\n                    <Login {...props} login={this.login} />\n                  );\n                }}\n              />\n              <Route\n                exact\n                path=\"/user\"\n                render={() => (\n                  <User\n                    allUserData={this.state.allUserData}\n                    user={this.state.userData}\n                    id={this.state.currentId}\n                    email={this.state.email}\n                    article={this.state.article}\n                  />\n                )}\n              />\n              <Route\n                path=\"/post\"\n                render={() => {\n                  return (\n                    <PostArea\n                      id={this.state.currentId}\n                      user={this.state.userData}\n                    />\n                  );\n                }}\n              />\n              <Route\n                path=\"/article\"\n                exact\n                render={props => (\n                  <Articles\n                    {...props}\n                    article={this.state.article}\n                    id={this.state.currentId}\n                    user={this.state.userData}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n"],"sourceRoot":""}